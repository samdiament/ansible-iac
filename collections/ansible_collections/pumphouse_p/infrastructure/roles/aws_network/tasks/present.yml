---
- name: Ensure VPC exists with desired configuration
  amazon.aws.ec2_vpc_net:
    name: "{{ item.aws_net_name }}"
    cidr_block: "{{ item.aws_net_cidr_block | default(aws_net_cidr_block) }}"
    dns_hostnames: "{{ item.aws_net_dns_hostnames | default(aws_net_dns_hostnames) }}"
    dns_support: "{{ item.aws_net_dns_support | default(aws_net_dns_support) }}"
    purge_cidrs: "{{ item.aws_net_purge_cidrs | default(aws_net_purge_cidrs) }}"
    ipv6_cidr: "{{ item.aws_net_ipv6_cidr | default(omit) }}"
    multi_ok: "{{ item.aws_net_multi_ok | default(omit) }}"
    state: present
    region: "{{ item.aws_region | default(aws_region) }}"
    tags: "{{ aws_net_user_tags | combine(aws_net_resource_tags) }}"
  register: __aws_net
  loop: "{{ aws_networks | selectattr('aws_net_state', '==', 'present') }}"
  async: 1000
  poll: 0
  changed_when: __aws_net.changed

- name: Wait for provisioning to complete
  ansible.builtin.async_status:
    jid: "{{ item.ansible_job_id }}"
  register: __aws_net_async_result
  until: __aws_net_async_result.finished
  retries: 100
  delay: 3
  loop: "{{ __aws_net.results }}"
  when: item.ansible_job_id is defined
